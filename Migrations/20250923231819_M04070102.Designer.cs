// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Practice4.DbContextes;

#nullable disable

namespace Practice4.Migrations
{
    [DbContext(typeof(BamaDB))]
    [Migration("20250923231819_M04070102")]
    partial class M04070102
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Practice4.Entities.CarAdvertisements.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BodyCondition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InteriorColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Madel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mileage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Year")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Practice4.Entities.CarAdvertisements.CarAdvertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("FreeRegion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PictureOrVideo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PriceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VisitLocationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("PriceId");

                    b.HasIndex("UserId");

                    b.HasIndex("VisitLocationId");

                    b.ToTable("CarAdvertisements");
                });

            modelBuilder.Entity("Practice4.Entities.Exhibition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExhibitionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExhibitionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Landline")
                        .HasColumnType("REAL");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("PhoneNumber")
                        .HasColumnType("REAL");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("YourName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Exhibitions");
                });

            modelBuilder.Entity("Practice4.Entities.HeavyVehicleAdvertisings.HeavyVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BodyCondition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gearbox")
                        .HasColumnType("TEXT");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Madel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mileage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OperatingHours")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("RepairHistory")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserSubcategory")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserYype")
                        .HasColumnType("TEXT");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Year")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("HeavyVehicles");
                });

            modelBuilder.Entity("Practice4.Entities.HeavyVehicleAdvertisings.HeavyVehicleAdvertising", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HeavyVehicleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Picture")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PriceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VisitLocationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HeavyVehicleId");

                    b.HasIndex("PriceId");

                    b.HasIndex("UserId");

                    b.HasIndex("VisitLocationId");

                    b.ToTable("HeavyVehicleAdvertisings");
                });

            modelBuilder.Entity("Practice4.Entities.Installments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeliveryTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("DownPayment")
                        .HasColumnType("REAL");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("InstallmentAmount")
                        .HasColumnType("REAL");

                    b.Property<string>("NumberOfInstallments")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("SecondDownPayment")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Installments");
                });

            modelBuilder.Entity("Practice4.Entities.MotorAdvertisings.Motor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BodyColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FuelYype")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gearbox")
                        .HasColumnType("TEXT");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Madel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mileage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Year")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Motors");
                });

            modelBuilder.Entity("Practice4.Entities.MotorAdvertisings.MotorAdvertising", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MotorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Picture")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PriceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VisitLocationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MotorId");

                    b.HasIndex("PriceId");

                    b.HasIndex("UserId");

                    b.HasIndex("VisitLocationId");

                    b.ToTable("MotorAdvertisings");
                });

            modelBuilder.Entity("Practice4.Entities.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Cash")
                        .HasColumnType("REAL");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("InstallmentsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InstallmentsId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("Practice4.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("PhoneNumber")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Practice4.Entities.VisitLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("VisitLocations");
                });

            modelBuilder.Entity("Practice4.Entities.CarAdvertisements.CarAdvertisement", b =>
                {
                    b.HasOne("Practice4.Entities.CarAdvertisements.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Practice4.Entities.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");

                    b.HasOne("Practice4.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Practice4.Entities.VisitLocation", "VisitLocation")
                        .WithMany()
                        .HasForeignKey("VisitLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Price");

                    b.Navigation("User");

                    b.Navigation("VisitLocation");
                });

            modelBuilder.Entity("Practice4.Entities.HeavyVehicleAdvertisings.HeavyVehicleAdvertising", b =>
                {
                    b.HasOne("Practice4.Entities.HeavyVehicleAdvertisings.HeavyVehicle", "HeavyVehicle")
                        .WithMany()
                        .HasForeignKey("HeavyVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Practice4.Entities.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");

                    b.HasOne("Practice4.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Practice4.Entities.VisitLocation", "VisitLocation")
                        .WithMany()
                        .HasForeignKey("VisitLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeavyVehicle");

                    b.Navigation("Price");

                    b.Navigation("User");

                    b.Navigation("VisitLocation");
                });

            modelBuilder.Entity("Practice4.Entities.MotorAdvertisings.MotorAdvertising", b =>
                {
                    b.HasOne("Practice4.Entities.MotorAdvertisings.Motor", "Motor")
                        .WithMany()
                        .HasForeignKey("MotorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Practice4.Entities.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");

                    b.HasOne("Practice4.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Practice4.Entities.VisitLocation", "VisitLocation")
                        .WithMany()
                        .HasForeignKey("VisitLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motor");

                    b.Navigation("Price");

                    b.Navigation("User");

                    b.Navigation("VisitLocation");
                });

            modelBuilder.Entity("Practice4.Entities.Price", b =>
                {
                    b.HasOne("Practice4.Entities.Installments", "Installments")
                        .WithMany()
                        .HasForeignKey("InstallmentsId");

                    b.Navigation("Installments");
                });
#pragma warning restore 612, 618
        }
    }
}
